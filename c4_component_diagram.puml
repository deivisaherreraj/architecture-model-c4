@startuml Diagrama de Componentes

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define DEVICONS_2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define MATERIAL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/material

!include DEVICONS/angular.puml
!include DEVICONS/android.puml

!include DEVICONS_2/microsoftsqlserver_wordmark.puml
!include DEVICONS_2/dotnetcore.puml
!include DEVICONS_2/mongodb_wordmark.puml

!include FONTAWESOME/server.puml

!include MATERIAL/https.puml

System_Boundary(app, "Apps") {
    Container(web_app, "Web Application", "TypeScript/Angular", "La interfaz principal con la que interactua el cliente", $sprite="angular")
    Container(mobile_app, "Mobile App", "C#, Xamarin Forms MVVM", "La interfaz móvil que interactua tanto el cliente como asesor", $sprite="android")
    Container(admin_app, "Administrative System", "TypeScript/Angular", "La interfaz de administrador para la gestión del cliente y tecnico", $sprite="angular")
}

System(identity, "Autenticación y Autorización", "Administrar el acceso a los recursos y servicios de manera segura", $sprite="https")

System_Boundary(apiManagement, "API Management Platform") {    
    Container(api, "APIs Gateway", "C#, NET Core 5.0 DDD", "Maneja toda la lógica de negocios", $sprite="dotnetcore")
    Container(cache, "Cache System", "Amazon ElastiCache", "Sistema para el manejo y administracion de cache.", $sprite="server")
    System_Boundary(microservicios, "Microservicios") {    
        Container(micro1, "Microservicios #1", "Data Service", $sprite="server")
        Container(micro2, "Microservicios #2", "Log Service", $sprite="server")
        Container(micro3, "Microservicios #3", "File Service", $sprite="server")
    }
}

System_Boundary(dbStore, "Data Store") {    
    ContainerDb(db, "Relational Database", "Microsoft SQL", "Contiene información de los clientes, técnicos.", $sprite="microsoftsqlserver_wordmark")
    ContainerDb(dbmongo, "NoSQL Data Store", "MongoDB", "Contiene historial y planes de los clientes.", $sprite="mongodb_wordmark")
    Container(fileSytem, "File System", "FAT32", "Sistema para el manejo y administracion de archivos.", $sprite="server")
}

Rel(web_app, identity, "Usar", "https")
Rel(mobile_app, identity, "Usar", "https")
Rel(admin_app, identity, "Usar", "https")

Rel(identity, api, "Autentificación/Autorización", "https")

Rel(api, cache, "Usar")
Rel(cache, api, "Usar")

Rel_R(api, micro1, "RESTful")
Rel_R(api, micro2, "RESTful")
Rel_R(api, micro3, "RESTful")

Rel_R(micro1, db, "Lectura/Escritura")
Rel_R(micro2, dbmongo, "Lectura/Escritura")
Rel_R(micro3, fileSytem, "Lectura/Escritura")

@enduml